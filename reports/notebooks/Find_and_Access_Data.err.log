Traceback (most recent call last):
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/josteines/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from fadg.find_and_collocate import SearchCSW
from datetime import datetime, timedelta

############ Time and dt ############

time_str = '2012-02-14 00:00:00' 
''' Valid datetime string for the SearchCSW function.
    Default is the time right now; now = datetime.now() '''

time = datetime.strptime(time_str, '%Y-%m-%d %H:%M:%S')

dt = 24        # dt : float (default 24)
               # Total time interval in hours before and after the given time 
               # (dt is centered around the selected time).

print(f'Finding data within the timespan of:')
print('\n')
print(f'    {time - timedelta(hours=dt)}')
print(f'             and         ') 
print(f'    {time + timedelta(hours=dt)}')
print('\n')


############ Text ############

Text = "Doppler" 
''' This text string needs to be part of 
    the title of the files to be found.'''

print(f'Finding data with titles containing: "{Text}".')
print('\n')

############ bbox ############

Boundary_Box = [34.9, 80.9, 35.1, 81]   
''' This boundary box only have to be intersected by
    the geographical extent of the desired datasets.
    Default : [-180, -90, 180, 90] '''

print(f'Finding data intersected by this specified boundary box:')
print('\n')
print(f'             {Boundary_Box}')
print('\n')

############ endpoint ############

# Endpoint = "https://data.csw.met.no"      # The endpoint to use 
                                            # when data is made 
                                            # publicly available


Endpoint = "https://csw.s-enda-staging.k8s.met.no"     
                                            # Endpoint used in the 
                                            # original version 
                                            # - only accessible 
                                            # internally at MET 
                                            # Norway
''' The site at which the data is located '''

print(f"Searching for data with endpoint set to:")
print('\n')
print(f'      {Endpoint}     ')
print('\n')

############ Finding the Corresponding datasets ############

sar = SearchCSW(time = time, 
                dt = dt, 
                text = Text, 
                bbox = Boundary_Box, 
                endpoint = Endpoint)




############## How many files are found ####################
if len(sar.urls) == 0:
    print('No data match the chosen credentials...')
elif len(sar.urls) == 1:
    print(f'''
There is {len(sar.urls)} file which match the chosen credentials!''')
else:
    print(f'''
There are {len(sar.urls)} files which match the chosen credentials!''')

print('\n')



############### Provide the found URLs ######################
sar.urls.sort()  # Sorts the list of files
print('''These are the Opendap-URLs of the datasets 
which match the chosen credentials:''')
sar.urls
------------------

----- stdout -----
Finding data within the timespan of:


    2012-02-13 00:00:00
             and         
    2012-02-15 00:00:00


Finding data with titles containing: "Doppler".


Finding data intersected by this specified boundary box:


             [34.9, 80.9, 35.1, 81]


Searching for data with endpoint set to:


      https://csw.s-enda-staging.k8s.met.no
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mServiceException[0m                          Traceback (most recent call last)
Cell [0;32mIn[4], line 67[0m
[1;32m     63[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;130;01m\n[39;00m[38;5;124m'[39m)
[1;32m     65[0m [38;5;66;03m############ Finding the Corresponding datasets ############[39;00m
[0;32m---> 67[0m sar [38;5;241m=[39m [43mSearchCSW[49m[43m([49m[43mtime[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mtime[49m[43m,[49m[43m [49m
[1;32m     68[0m [43m                [49m[43mdt[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mdt[49m[43m,[49m[43m [49m
[1;32m     69[0m [43m                [49m[43mtext[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mText[49m[43m,[49m[43m [49m
[1;32m     70[0m [43m                [49m[43mbbox[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mBoundary_Box[49m[43m,[49m[43m [49m
[1;32m     71[0m [43m                [49m[43mendpoint[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43mEndpoint[49m[43m)[49m
[1;32m     76[0m [38;5;66;03m############## How many files are found ####################[39;00m
[1;32m     77[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(sar[38;5;241m.[39murls) [38;5;241m==[39m [38;5;241m0[39m:

File [0;32m~/src/SAR/my-book-files/SARbook/notebooks/fadg/find_and_collocate.py:83[0m, in [0;36mSearchCSW.__init__[0;34m(self, time, dt, bbox, text, crs, *args, **kwargs)[0m
[1;32m     80[0m [38;5;28;01mif[39;00m text [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     81[0m     constraints[38;5;241m.[39mappend([38;5;28mself[39m[38;5;241m.[39m_get_free_text_search(text))
[0;32m---> 83[0m [38;5;28mself[39m[38;5;241m.[39mrecords [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_execute[49m[43m([49m[43m[[49m[43mfes[49m[38;5;241;43m.[39;49m[43mAnd[49m[43m([49m[43mconstraints[49m[43m)[49m[43m][49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     85[0m [38;5;28mself[39m[38;5;241m.[39murls [38;5;241m=[39m []
[1;32m     87[0m [38;5;28;01mfor[39;00m key, record [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mrecords[38;5;241m.[39mitems():

File [0;32m~/src/SAR/my-book-files/SARbook/notebooks/fadg/find_and_collocate.py:137[0m, in [0;36mSearchCSW._execute[0;34m(self, filter_list, pagesize, max_records, endpoint)[0m
[1;32m    134[0m start_position [38;5;241m=[39m [38;5;241m0[39m
[1;32m    136[0m [38;5;66;03m# Connect to the CSW service[39;00m
[0;32m--> 137[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_set_csw_connection[49m[43m([49m[43mendpoint[49m[38;5;241;43m=[39;49m[43mendpoint[49m[43m)[49m
[1;32m    139[0m next_record [38;5;241m=[39m [38;5;241m1[39m
[1;32m    140[0m [38;5;28;01mwhile[39;00m next_record [38;5;241m!=[39m [38;5;241m0[39m:
[1;32m    141[0m     [38;5;66;03m# Iterate pages until the requested max_records is reached[39;00m

File [0;32m~/src/SAR/my-book-files/SARbook/notebooks/fadg/find_and_collocate.py:125[0m, in [0;36mSearchCSW._set_csw_connection[0;34m(self, endpoint)[0m
[1;32m    122[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21m_set_csw_connection[39m([38;5;28mself[39m, endpoint[38;5;241m=[39m[38;5;124m"[39m[38;5;124mhttps://data.csw.met.no[39m[38;5;124m"[39m):
[1;32m    123[0m [38;5;250m    [39m[38;5;124;03m""" Sets connection to OGC CSW service.[39;00m
[1;32m    124[0m [38;5;124;03m    """[39;00m
[0;32m--> 125[0m     [38;5;28mself[39m[38;5;241m.[39mconn_csw [38;5;241m=[39m [43mCatalogueServiceWeb[49m[43m([49m[43mendpoint[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[38;5;241;43m60[39;49m[43m)[49m

File [0;32m~/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/owslib/csw.py:59[0m, in [0;36mCatalogueServiceWeb[0;34m(url, lang, version, timeout, skip_caps, username, password, auth, headers)[0m
[1;32m     56[0m clean_url [38;5;241m=[39m clean_ows_url(url)
[1;32m     58[0m [38;5;28;01mif[39;00m version [38;5;241m==[39m [38;5;124m'[39m[38;5;124m2.0.2[39m[38;5;124m'[39m:
[0;32m---> 59[0m     [38;5;28;01mreturn[39;00m [43mcsw2[49m[38;5;241;43m.[39;49m[43mCatalogueServiceWeb[49m[43m([49m
[1;32m     60[0m [43m        [49m[43mclean_url[49m[43m,[49m[43m [49m[43mlang[49m[38;5;241;43m=[39;49m[43mlang[49m[43m,[49m[43m [49m[43mversion[49m[38;5;241;43m=[39;49m[43mversion[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m     61[0m [43m        [49m[43mskip_caps[49m[38;5;241;43m=[39;49m[43mskip_caps[49m[43m,[49m[43m [49m[43musername[49m[38;5;241;43m=[39;49m[43musername[49m[43m,[49m[43m [49m[43mpassword[49m[38;5;241;43m=[39;49m[43mpassword[49m[43m,[49m
[1;32m     62[0m [43m        [49m[43mauth[49m[38;5;241;43m=[39;49m[43mauth[49m[43m,[49m[43m [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m)[49m
[1;32m     63[0m [38;5;28;01mif[39;00m version [38;5;241m==[39m [38;5;124m'[39m[38;5;124m3.0.0[39m[38;5;124m'[39m:
[1;32m     64[0m     [38;5;28;01mreturn[39;00m csw3[38;5;241m.[39mCatalogueServiceWeb(
[1;32m     65[0m         clean_url, lang[38;5;241m=[39mlang, version[38;5;241m=[39mversion, timeout[38;5;241m=[39mtimeout,
[1;32m     66[0m         skip_caps[38;5;241m=[39mskip_caps, username[38;5;241m=[39musername, password[38;5;241m=[39mpassword,
[1;32m     67[0m         auth[38;5;241m=[39mauth, headers[38;5;241m=[39mheaders)

File [0;32m~/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/owslib/catalogue/csw2.py:89[0m, in [0;36mCatalogueServiceWeb.__init__[0;34m(self, url, lang, version, timeout, skip_caps, username, password, auth, headers)[0m
[1;32m     85[0m data [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mservice[39m[38;5;124m'[39m: [38;5;28mself[39m[38;5;241m.[39mservice, [38;5;124m'[39m[38;5;124mversion[39m[38;5;124m'[39m: [38;5;28mself[39m[38;5;241m.[39mversion, [38;5;124m'[39m[38;5;124mrequest[39m[38;5;124m'[39m: [38;5;124m'[39m[38;5;124mGetCapabilities[39m[38;5;124m'[39m}
[1;32m     87[0m [38;5;28mself[39m[38;5;241m.[39mrequest [38;5;241m=[39m urlencode(data)
[0;32m---> 89[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_invoke[49m[43m([49m[43m)[49m
[1;32m     91[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mexceptionreport [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m     92[0m     [38;5;28mself[39m[38;5;241m.[39mupdateSequence [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_exml[38;5;241m.[39mgetroot()[38;5;241m.[39mattrib[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mupdateSequence[39m[38;5;124m'[39m)

File [0;32m~/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/owslib/catalogue/csw2.py:685[0m, in [0;36mCatalogueServiceWeb._invoke[0;34m(self)[0m
[1;32m    683[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m[38;5;241m.[39mrequest, [38;5;28mstr[39m):  [38;5;66;03m# GET KVP[39;00m
[1;32m    684[0m     [38;5;28mself[39m[38;5;241m.[39mrequest [38;5;241m=[39m [38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;132;01m%s[39;00m[38;5;124m'[39m [38;5;241m%[39m (bind_url(request_url), [38;5;28mself[39m[38;5;241m.[39mrequest)
[0;32m--> 685[0m     [38;5;28mself[39m[38;5;241m.[39mresponse [38;5;241m=[39m [43mopenURL[49m[43m([49m
[1;32m    686[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrequest[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mGet[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mauth[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauth[49m[43m,[49m
[1;32m    687[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mheaders[49m[43m)[49m[38;5;241m.[39mread()
[1;32m    688[0m [38;5;28;01melse[39;00m:
[1;32m    689[0m     [38;5;28mself[39m[38;5;241m.[39mrequest [38;5;241m=[39m cleanup_namespaces([38;5;28mself[39m[38;5;241m.[39mrequest)

File [0;32m~/src/SAR/my-book-files/SARbook/.venv/lib/python3.10/site-packages/owslib/util.py:210[0m, in [0;36mopenURL[0;34m(url_base, data, method, cookies, username, password, timeout, headers, verify, cert, auth)[0m
[1;32m    207[0m req [38;5;241m=[39m requests[38;5;241m.[39mrequest(method[38;5;241m.[39mupper(), url_base, headers[38;5;241m=[39mheaders, [38;5;241m*[39m[38;5;241m*[39mrkwargs)
[1;32m    209[0m [38;5;28;01mif[39;00m req[38;5;241m.[39mstatus_code [38;5;129;01min[39;00m [[38;5;241m400[39m, [38;5;241m401[39m, [38;5;241m403[39m]:
[0;32m--> 210[0m     [38;5;28;01mraise[39;00m ServiceException(req[38;5;241m.[39mtext)
[1;32m    212[0m [38;5;28;01mif[39;00m req[38;5;241m.[39mstatus_code [38;5;129;01min[39;00m [[38;5;241m404[39m, [38;5;241m500[39m, [38;5;241m502[39m, [38;5;241m503[39m, [38;5;241m504[39m]:    [38;5;66;03m# add more if needed[39;00m
[1;32m    213[0m     req[38;5;241m.[39mraise_for_status()

[0;31mServiceException[0m: <html>
<head><title>403 Forbidden</title></head>
<body>
<center><h1>403 Forbidden</h1></center>
<hr><center>nginx</center>
</body>
</html>


